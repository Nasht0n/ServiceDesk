@model WebUI.ViewModels.ServiceModel.ServiceViewModel

@{
    ViewBag.Title = "Тип заявки";
    Layout = "~/Areas/ControlPanel/Views/Shared/_ControlPanelLayout.cshtml";
}

<h2 class="text-center display-4 my-3 text-dark">@ViewBag.Title</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 class="mt-5 text-dark">Редактирование типа заявки</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="col-12">
                <div class="col-auto">
                    <div class="form-group">
                        @Html.LabelFor(model => model.BranchModel, htmlAttributes: new { @class = "control-label text-dark" })
                        @Html.DropDownListFor(model => model.SelectedBranch, Model.BranchList, "Укажите отрасль заявки", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SelectedBranch, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <div class="col-auto">
                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryModel, htmlAttributes: new { @class = "control-label text-dark" })
                        @Html.DropDownListFor(model => model.SelectedCategory, Model.CategoryList, "Укажите категорию заявки", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SelectedBranch, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>


        <div class="row">
            <div class="col-12">
                <div class="col-auto">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label text-dark" })
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите наименование категории заявки", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-4">
                <div class="col-auto">
                    <div class="custom-control custom-checkbox">
                        @Html.CheckBoxFor(model => model.Visible, new { @class = "custom-control-input  text-dark" })
                        @Html.LabelFor(model => model.Visible, htmlAttributes: new { @class = "custom-control-label  text-dark" })
                        @Html.ValidationMessageFor(model => model.Visible, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-4">
                <div class="col-auto">
                    <div class="custom-control custom-checkbox">
                        @Html.CheckBoxFor(model => model.ApprovalRequired, new { @class = "custom-control-input  text-dark" })
                        @Html.LabelFor(model => model.ApprovalRequired, htmlAttributes: new { @class = "custom-control-label  text-dark" })
                        @Html.ValidationMessageFor(model => model.ApprovalRequired, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-4">
                <div class="col-auto">
                    <div class="custom-control custom-checkbox">
                        @Html.CheckBoxFor(model => model.ManyApprovalRequired, new { @class = "custom-control-input  text-dark" })
                        @Html.LabelFor(model => model.ManyApprovalRequired, htmlAttributes: new { @class = "custom-control-label  text-dark" })
                        @Html.ValidationMessageFor(model => model.ManyApprovalRequired, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row my-3">
            <div class="col-12">
                <div class="col-auto">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Controller, htmlAttributes: new { @class = "control-label text-dark" })
                        @Html.EditorFor(model => model.Controller, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите наименование категории заявки", @autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Controller, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить запись" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section scripts
    {
    <script>
        var categoriesUrl = '@Url.Action("PopulateCategories", "Service")';
        var branches = $('#SelectedBranch');
        var categories = $('#SelectedCategory');
        $('#SelectedBranch').change(function () {
            categories.empty();
            $.getJSON(categoriesUrl, { branchId: $(this).val() }, function (data) {
            if (!data) {
                return;
            }
            categories.append($('<option></option>').val('').text('Укажите категорию заявки'));
            $.each(data, function (index, item) {
                categories.append($('<option></option>').val(item.Value).text(item.Text));
                console.log(item);
            });
        });
    })
    </script>
}
