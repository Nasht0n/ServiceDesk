@model WebUI.ViewModels.Account.AccountViewModel

@{
    ViewBag.Title = "Учетные записи";
    Layout = "~/Areas/ControlPanel/Views/Shared/_ControlPanelLayout.cshtml";
}

<h2 class="text-center text-dark display-4 my-3">@ViewBag.Title</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal footer">
        <h4 class="mt-3 text-dark">Данные сотрудника</h4>
        <hr class="mb-3" />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EmployeeModel.Id, new { Name = "Model.EmployeeModel.Id" })
        @Html.HiddenFor(model => model.Id, new { Name = "Model.Id" })
        @Html.HiddenFor(model => model.ChangePasswordDate, new { Name = "Model.ChangePasswordDate" })
        @Html.HiddenFor(model => model.LastEnterDateTime, new { Name = "Model.LastEnterDateTime" })
        @Html.HiddenFor(model => model.RegistrationDate, new { Name = "Model.RegistrationDate" })

        <div class="row">
            <div class="col-sm-12 col-md-6 col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeModel.SubdivisionModel.Fullname, htmlAttributes: new { @class = "control-label text-dark font-weight-bolder ml-3" })
                    @Html.TextBoxFor(model => model.EmployeeModel.SubdivisionModel.Fullname, new { Name = "Model.EmployeeModel.SubdivisionModel.Fullname", @class = "form-control tblItem bg-light border-0", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.EmployeeModel.SubdivisionModel.Fullname, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.EmployeeModel.Fullname, htmlAttributes: new { @class = "control-label text-dark font-weight-bolder ml-3" })
                    @Html.TextBoxFor(model => model.EmployeeModel.Fullname, new { Name = "Model.EmployeeModel.Fullname", @class = "form-control tblItem bg-light border-0", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.EmployeeModel.Fullname, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <h4 class="mt-3 text-dark">Учетная запись</h4>
        <hr class="mb-3" />

        <div class="row">
            <div class="col-sm-12 col-md-6 col-lg-6">
                <div class="col-auto">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label text-dark font-weight-bolder" })
                        @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите логин пользователя", @autocomplete = "off", Name = "Model.Username" } })
                        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-6">
                <div class="col-auto">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label text-dark font-weight-bolder" })
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите пароль пользователя", @autocomplete = "off", Name = "Model.Password" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

        </div>
        <div class="form-group">
            <div class="col-sm-12 col-md-6 col-lg-6">
                <div class="custom-control custom-checkbox">
                    @Html.CheckBoxFor(model => model.ChangePasswordOnNextEnter, new { @class = "custom-control-input text-dark", Name = "Model.ChangePasswordOnNextEnter" })
                    @Html.LabelFor(model => model.ChangePasswordOnNextEnter, htmlAttributes: new { @class = "custom-control-label text-dark" })
                    @Html.ValidationMessageFor(model => model.ChangePasswordOnNextEnter, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-sm-12 col-md-6 col-lg-6">
                <div class="custom-control custom-checkbox">
                    @Html.CheckBoxFor(model => model.IsEnabled, new { @class = "custom-control-input text-dark", Name = "Model.IsEnabled" })
                    @Html.LabelFor(model => model.IsEnabled, htmlAttributes: new { @class = "custom-control-label text-dark" })
                    @Html.ValidationMessageFor(model => model.IsEnabled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <h4 class="mt-3 text-dark">Настройка прав доступа</h4>
        <hr class="mb-3" />
        <div class="row my-3 ml-3">
            @for (int i = 0; i < Model.Permissions.Count(); i++)
            {
                <div class="col-sm-12 col-md-6 col-lg-4">
                    @Html.HiddenFor(model => model.Permissions[i].Id, new { Name = $"Model.Permissions[{i}].Id" })
                    @Html.HiddenFor(model => model.Permissions[i].Description, new { Name = $"Model.Permissions[{i}].Description" })
                    @Html.HiddenFor(model => model.Permissions[i].Title, new { Name = $"Model.Permissions[{i}].Title" })
                    <div class="custom-control custom-checkbox text-dark m-1">
                        @Html.CheckBoxFor(model => model.Permissions[i].IsChecked, new { @class = "custom-control-input text-dark", Name = $"Model.Permissions[{i}].IsChecked" })
                        @Html.LabelFor(model => model.Permissions[i].IsChecked, htmlAttributes: new { @class = "custom-control-label text-dark" })
                        @Html.DisplayFor(model => model.Permissions[i].Description)
                    </div>
                </div>
            }
        </div>
        <hr class="mb-3" />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить запись" class="btn btn-success" />
            </div>
        </div>
    </div>
}