@model WebUI.ViewModels.Requests.IT.Accounts.AccountRegistrationRequestViewModel
@section Scripts{
    <script>
        $(".custom-file-input").on("change", function () {
            var files = [];
            for (var i = 0; i < $(this)[0].files.length; i++) {
                files.push($(this)[0].files[i].name);
            }
            $(this).next('.custom-file-label').html(files.join(', '));
        });
    </script>
}
@{
    ViewBag.Title = "Заявка на регистрацию учетной записи";
    Layout = "~/Views/Shared/Cerulean/_DashboardLayout.cshtml";
}



<div class="container footer">
    <h2 class="display-4 text-center text-dark mt-3 mb-3">@ViewBag.Title</h2>
    <ol class="breadcrumb">
        <li class="breadcrumb-item">@Model.ServiceModel.BranchModel.Fullname</li>
        <li class="breadcrumb-item">@Model.ServiceModel.CategoryModel.Name</li>
        <li class="breadcrumb-item">@Model.ServiceModel.Name</li>
        <li class="breadcrumb-item active">Редактирование заявки</li>
    </ol>
    @using (Html.BeginForm("Edit", "AccountRegistrationRequest", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id, htmlAttributes: new { @class = "form-control", Name = "Model.Id" })
            @Html.HiddenFor(model => model.ServiceId, htmlAttributes: new { @class = "form-control", Name = "Model.ServiceId" })
            @Html.HiddenFor(model => model.StatusId, htmlAttributes: new { @class = "form-control", Name = "Model.StatusId" })
            @Html.HiddenFor(model => model.ClientId, htmlAttributes: new { @class = "form-control", Name = "Model.ClientId" })
            @Html.HiddenFor(model => model.ExecutorGroupId, htmlAttributes: new { @class = "form-control", Name = "Model.ExecutorGroupId" })
            @Html.HiddenFor(model => model.ExecutorId, htmlAttributes: new { @class = "form-control", Name = "Model.ExecutorId" })
            @Html.HiddenFor(model => model.SubdivisionId, htmlAttributes: new { @class = "form-control", Name = "Model.SubdivisionId" })

            <div class="row">
                <div class="form-group col-12">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-12 text-dark" })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", Name = "Model.Title", placeholder = "Введите заголовок заявки (Пример: Регистрация учетной записи)", autocomplete = "off" } })

                </div>
            </div>

            <div class="row">
                <div class="form-group col-12">
                    @Html.LabelFor(model => model.Justification, htmlAttributes: new { @class = "control-label col-md-12 text-dark" })
                    @Html.EditorFor(model => model.Justification, new { htmlAttributes = new { @class = "form-control", Name = "Model.Justification", placeholder = "Опишите необходимость заявки", @rows = 4 } })
                    @Html.ValidationMessageFor(model => model.Justification, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="row">
                <div class="form-group col-12">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-12 text-dark" })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", Name = "Model.Description", placeholder = "Введите дополнительную информацию о заявке", @rows = 4 } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="row">
                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.PriorityModel, htmlAttributes: new { @class = "control-label col-md-12 text-dark" })
                    @Html.DropDownListFor(model => model.PriorityId, Model.Priorities, htmlAttributes: new { @class = "form-control", Name = "Model.PriorityId" })
                </div>


                <div class="col-md-8">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FilePath, htmlAttributes: new { @class = "control-label" })
                        <div class="custom-file">
                            <input type="file" class="custom-file-input" id="inputFile" name="Model.Files" lang="ru" multiple accept=".xls, .xlsx, .doc, .docx, .txt">
                            <label class="custom-file-label" for="inputFile">Выберите файл</label>
                        </div>
                        <div class="row" id="fileList">
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-4 form-group">

                </div>
                <div class="col-md-8 form-group">
                    <h6>Прикрепленные файлы</h6>
                    @foreach (var item in Model.AttachmentsModel)
                    {
                        <div class="row">
                            <div class="col-md-12">
                                <a href="@Url.Action("DownloadFile","AccountRegistrationRequest",new {attachmentId = item.AttachmentModel.Id})" class="btn btn-link text-decoration-none">
                                    <i class="fas fa-file mr-1"></i>
                                    <span>@item.AttachmentModel.Filename</span>
                                </a>

                                <a href="@Url.Action("DeleteFile", "AccountRegistrationRequest", new { requestId = Model.Id, attachmentId = item.AttachmentModel.Id })" class="btn btn-link float-right">
                                    <i class="fas fa-trash mr-1 text-danger"></i>
                                </a>
                            </div>

                        </div>
                    }
                </div>
            </div>

            <div class="fileList">

            </div>

            <div class="row">
                <div class="form-group">
                    <div class="col-auto">
                        <input type="submit" value="Сохранить" class="btn btn-primary" />
                    </div>
                </div>
                <div class="text-dark">
                    @Html.ActionLink("Вернуться к созданию заявки", "ChooseBranch", "Dashboard", new { Area = "" }, new { @class = "btn btn-outline-primary" })
                </div>
            </div>
        </div>
    }
</div>
