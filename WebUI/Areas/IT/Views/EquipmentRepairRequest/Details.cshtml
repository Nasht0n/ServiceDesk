@model WebUI.ViewModels.Requests.IT.Equipments.EquipmentRepairDetailsRequestViewModel
@section Scripts{
    <script src="~/Scripts/servicedesk/equipments/repair-equipments-table.js" type="text/javascript"></script>
}
@using WebUI.Models.Enum
@{
    ViewBag.Title = "Заявка на ремонт оборудования";
    Layout = "~/Views/Shared/Cerulean/_DashboardLayout.cshtml";
}



<div class="container-fluid footer">
    <h2 class="display-4 text-center text-dark mt-3 mb-3">@ViewBag.Title</h2>
    <ol class="breadcrumb">
        <li class="breadcrumb-item">@Model.RequestModel.ServiceModel.BranchModel.Fullname</li>
        <li class="breadcrumb-item">@Model.RequestModel.ServiceModel.CategoryModel.Name</li>
        <li class="breadcrumb-item">@Model.RequestModel.ServiceModel.Name</li>
        <li class="breadcrumb-item active">Просмотр заявки</li>
    </ol>
    <div class="row">
        <div class="col-6">
            <div class="card mb-3 bg-white">
                <h3 class="card-header bg-primary text-white">@Model.RequestModel.Title</h3>
                <div class="card-body">
                    <h5 class="card-title text-dark">@ViewBag.Title</h5>
                    <h6 class="card-subtitle text-muted ml-auto">@Model.RequestModel.Client.SubdivisionModel.Fullname</h6>
                </div>
                <div class="card-body bg-white text-dark">
                    <p class="card-text">@Model.RequestModel.Justification</p>

                    @{ if (!string.IsNullOrWhiteSpace(Model.RequestModel.Description))
                        {
                            <p class="card-text">@Model.RequestModel.Description</p>
                        }
                    }
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item bg-white text-dark">
                        <span class="font-weight-bold ">@Html.LabelFor(model => model.RequestModel.StatusModel):</span>
                        <span class="ml-1">@Model.RequestModel.StatusModel.Fullname</span>
                    </li>
                    <li class="list-group-item bg-white text-dark">
                        <span class="font-weight-bold">@Html.LabelFor(model => model.RequestModel.PriorityModel):</span>
                        <span class="ml-1">@Model.RequestModel.PriorityModel.Fullname</span>
                    </li>
                    <li class="list-group-item bg-white text-dark">
                        <span class="font-weight-bold">@Html.LabelFor(model => model.RequestModel.CampusModel):</span>
                        <span class="ml-1">@Model.RequestModel.CampusModel.Name</span>
                    </li>
                    <li class="list-group-item bg-white text-dark">
                        <span class="font-weight-bold">@Html.LabelFor(model => model.RequestModel.Location):</span>
                        <span class="ml-1">@Model.RequestModel.Location</span>
                    </li>
                    <li class="list-group-item bg-white text-dark">
                        <span class="font-weight-bold">@Html.LabelFor(model => model.Repairs):</span>

                        @using (Html.BeginForm("AddConsumable", "EquipmentRepairRequest", new { id = Model.RequestModel.Id, consumableId = Model.SelectedConsumable, count = Model.RepairModel.Count }, FormMethod.Post))
                        {
                            <table class="table" id="tblRepairEquipments">
                                <thead class="table-primary">
                                    <tr>
                                        <td class="font-weight-bolder">Расходный материал</td>
                                        <td class="font-weight-bolder">Количество</td>
                                        <td></td>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Repairs)
                                    {
                                        <tr>
                                            <td>@item.ConsumableModel.Name</td>
                                            <td>@item.Count</td>
                                        </tr>
                                    }
                                </tbody>
                                @if (Model.IsExecutor && Model.RequestModel.StatusId == (int)RequestStatus.InWork)
                                {
                                    <tfoot>
                                        <tr>
                                            <td class="w-50">@Html.DropDownListFor(model => model.SelectedConsumable, Model.Consumables, "Выберите тип расходного материала", htmlAttributes: new { @class = "form-control" })</td>
                                            <td class="w-25">@Html.TextBoxFor(model => model.RepairModel.Count, "", new { @class = "form-control", id = "Count" })</td>
                                            <td class="w-25">
                                                <input type="submit" value="Добавить" class="btn btn-primary w-100" />
                                            </td>
                                        </tr>
                                    </tfoot>
                                }
                            </table>
                        }

                        @if (Model.Repairs.Count == 0 && !Model.IsExecutor)
                        {
                            <p>Нет информации о ремонте</p>
                        }

                    </li>
                </ul>
                <div class="card-body">
                    <div class="d-flex align-content-start flex-wrap">
                        @if (Model.UserPermissions.ApprovalAllowed && Model.RequestModel.StatusId == (int)RequestStatus.Approval && Model.RequestModel.ServiceModel.ApprovalRequired)
                        {
                            <a href="@Url.Action("AgreeRequest","EquipmentRepairRequest",new { Area = "IT", id=Model.RequestModel.Id })" class="btn btn-success flex-grow-1 mr-1 mb-1">Согласовать</a>
                            <a href="@Url.Action("RejectRequest","EquipmentRepairRequest",new { Area = "IT", id=Model.RequestModel.Id })" class="btn btn-warning flex-grow-1 mr-1 mb-1">Отклонить</a>
                        }
                        else if (Model.UserPermissions.GetInWorkRequest && Model.AllApproval && (Model.RequestModel.StatusId == (int)RequestStatus.Agreed || Model.RequestModel.StatusId == (int)RequestStatus.Open))
                        {
                            <a href="@Url.Action("GetInWork","EquipmentRepairRequest",new { Area = "IT", id=Model.RequestModel.Id })" class="btn btn-success flex-grow-1 mr-1 mb-1">Принять к исполнению</a>
                        }
                        else if (Model.CurrentUser.Id == Model.RequestModel.ClientId && (Model.UserPermissions.EditRequest || Model.UserPermissions.DeleteRequest) && (Model.RequestModel.StatusId == (int)RequestStatus.Open || Model.RequestModel.StatusId == (int)RequestStatus.Approval))
                        {
                            <a href="@Url.Action("Edit","EquipmentRepairRequest",new { Area = "IT", id = Model.RequestModel.Id })" class="btn btn-primary mr-1 mb-1">
                                <i class="fa fa-edit"></i>
                                <span class="ml-1">Редактировать</span>
                            </a>
                            <a href="@Url.Action("Delete","EquipmentRepairRequest",new { Area = "IT", id = Model.RequestModel.Id })" class="btn btn-danger ml-auto mr-1 mb-1">
                                <i class="fa fa-trash"></i>
                            </a>
                        }
                        else if (Model.UserPermissions.GetInWorkRequest && Model.RequestModel.StatusId == (int)RequestStatus.InWork)
                        {
                            <a href="@Url.Action("DoneWork","EquipmentRepairRequest",new { Area = "IT", id=Model.RequestModel.Id })" class="btn btn-success flex-grow-1 mr-1 mb-1">Выполнена</a>
                        }
                        else if (Model.RequestModel.StatusId == (int)RequestStatus.Done && Model.CurrentUser.Id == Model.RequestModel.ClientId)
                        {
                            <a href="@Url.Action("Close","EquipmentRepairRequest",new { Area = "IT", id = Model.RequestModel.Id })" class="btn btn-primary mr-1 mb-1">Закрыть заявку</a>
                        }
                        else if (Model.RequestModel.StatusId == (int)RequestStatus.Closed && Model.RequestModel.ExecutorId == Model.CurrentUser.Id)
                        {
                            <a href="@Url.Action("Archive","EquipmentRepairRequest",new { Area = "IT", id=Model.RequestModel.Id })" class="btn btn-success flex-grow-1 mr-1 mb-1">В архив</a>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-6">
            <h3 class="card-header bg-primary text-white">Жизненный цикл заявки</h3>
            <div class="list-group">
                @foreach (var lifeCycle in Model.LifeCyclesListModel)
                {
                    <a href="#" class="list-group-item list-group-item-action flex-column align-items-start bg-white text-dark">
                        <div class="d-flex w-100 justify-content-between">
                            <h5 class="mb-1">@lifeCycle.Message</h5>
                            <small>@lifeCycle.Date.ToString()</small>
                        </div>
                        <i class="fa fa-user"></i>
                        <small>@lifeCycle.Employee.Fullname</small>
                    </a>
                }
            </div>
            @using (Html.BeginForm("AddMessage", "EquipmentRepairRequest", new { id = Model.RequestModel.Id }, FormMethod.Post))
            {
                <div class="d-flex mt-1">
                    <div class="flex-grow-1 form-group mr-1">
                        @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control", placeholder = "Введите комментарий", autocomplete = "off" } })
                        @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                    </div>
                    <div class="ml-auto form-group">
                        <input type="submit" value="Отправить" class="btn btn-primary w-100" />
                    </div>
                </div>
            }
        </div>
    </div>
</div>
