@model WebUI.ViewModels.Requests.IT.Equipments.EquipmentRepairDetailsRequestViewModel

@using WebUI.Models.Enum
@{
    ViewBag.Title = "Заявка на ремонт оборудования";
    Layout = "~/Views/Shared/Cerulean/_DashboardLayout.cshtml";
}
@section scripts
    {
    <script>
        var url = '@Url.Action("PopulateConsumables", "EquipmentRepairRequest")';
        var ddConsumableType = $('#SelectedConsumableType');
        var ddConsumable = $('#SelectedConsumable');

        ddConsumableType.change(function () {
            ddConsumable.empty();
            $.getJSON(url, { typeId: $(this).val() }, function (data) {
                if (!data) { return; }
                ddConsumable.append($('<option></option>').val('').text('Выберите расходный материал'));
                $.each(data, function (index, item) {
                    ddConsumable.append($('<option></option>').val(item.Value).text(item.Text));
                });
            });
        })
    </script>
}


<div class="container-fluid footer">
    <h2 class="display-4 text-center text-dark mt-3 mb-3">@ViewBag.Title</h2>
    <ol class="breadcrumb">
        <li class="breadcrumb-item">@Model.RequestModel.ServiceModel.BranchModel.Fullname</li>
        <li class="breadcrumb-item">@Model.RequestModel.ServiceModel.CategoryModel.Name</li>
        <li class="breadcrumb-item">@Model.RequestModel.ServiceModel.Name</li>
        <li class="breadcrumb-item active">Просмотр заявки</li>
    </ol>
    <div class="row">
        <div class="col-6">
            <div class="card mb-3 bg-white">
                <div class="card-body">
                    <h5 class="card-title text-dark">@ViewBag.Title</h5>
                    <h6 class="card-subtitle text-muted ml-auto">@Model.RequestModel.Client.SubdivisionModel.Fullname</h6>
                </div>
                <div class="card-body bg-white text-dark">
                    <p class="card-text">@Model.RequestModel.Justification</p>

                    @{ if (!string.IsNullOrWhiteSpace(Model.RequestModel.Description))
                        {
                            <p class="card-text">@Model.RequestModel.Description</p>
                        }
                    }
                </div>
                <ul class="list-group list-group-flush">
                    <li class="list-group-item bg-white text-dark">
                        <span class="font-weight-bold ">@Html.LabelFor(model => model.RequestModel.StatusModel):</span>
                        <span class="ml-1">@Model.RequestModel.StatusModel.Fullname</span>
                    </li>
                    <li class="list-group-item bg-white text-dark">
                        <span class="font-weight-bold">@Html.LabelFor(model => model.RequestModel.PriorityModel):</span>
                        <span class="ml-1">@Model.RequestModel.PriorityModel.Fullname</span>
                    </li>
                    <li class="list-group-item bg-white text-dark">
                        <span class="font-weight-bold">@Html.LabelFor(model => model.RequestModel.CampusModel):</span>
                        <span class="ml-1">@Model.RequestModel.CampusModel.Name</span>
                    </li>
                    <li class="list-group-item bg-white text-dark">
                        <span class="font-weight-bold">@Html.LabelFor(model => model.RequestModel.Location):</span>
                        <span class="ml-1">@Model.RequestModel.Location</span>
                    </li>
                    <li class="list-group-item bg-white text-dark">
                        <span class="font-weight-bold">@Html.LabelFor(model => model.RequestModel.Repairs):</span>
                        <table class="table">
                            <thead>
                                <tr>
                                    <td class="font-weight-bolder">Тип оборудования:</td>
                                    <td class="font-weight-bolder">Наименование:</td>
                                    <td class="font-weight-bolder">Инв. номер:</td>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.RequestModel.Repairs)
                                {
                                    <tr>
                                        <td>@item.EquipmentTypeModel.Name</td>
                                        <td>@item.Model</td>
                                        <td>@item.InventoryNumber</td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                    </li>
                </ul>
                <div class="card-body">
                    <div class="d-flex align-content-start flex-wrap">
                        @if (Model.UserPermissions.ApprovalAllowed && Model.RequestModel.StatusId == (int)RequestStatus.Approval && Model.RequestModel.ServiceModel.ApprovalRequired)
                        {
                            <a href="@Url.Action("AgreeRequest","EquipmentRepairRequest",new { Area = "IT", id=Model.RequestModel.Id })" class="btn btn-success flex-grow-1 mr-1 mb-1">Согласовать</a>
                            <a href="@Url.Action("RejectRequest","EquipmentRepairRequest",new { Area = "IT", id=Model.RequestModel.Id })" class="btn btn-warning flex-grow-1 mr-1 mb-1">Отклонить</a>
                        }
                        else if (Model.UserPermissions.GetInWorkRequest && Model.AllApproval && (Model.RequestModel.StatusId == (int)RequestStatus.Agreed || Model.RequestModel.StatusId == (int)RequestStatus.Open))
                        {
                            <a href="@Url.Action("GetInWork","EquipmentRepairRequest",new { Area = "IT", id=Model.RequestModel.Id })" class="btn btn-success flex-grow-1 mr-1 mb-1">Принять к исполнению</a>
                        }
                        else if (Model.CurrentUser.Id == Model.RequestModel.ClientId && (Model.UserPermissions.EditRequest || Model.UserPermissions.DeleteRequest) && (Model.RequestModel.StatusId == (int)RequestStatus.Open || Model.RequestModel.StatusId == (int)RequestStatus.Approval))
                        {
                            <a href="@Url.Action("Edit","EquipmentRepairRequest",new { Area = "IT", id = Model.RequestModel.Id })" class="btn btn-primary mr-1 mb-1">
                                <i class="fa fa-edit"></i>
                                <span class="ml-1">Редактировать</span>
                            </a>
                            <a href="@Url.Action("Delete","EquipmentRepairRequest",new { Area = "IT", id = Model.RequestModel.Id })" class="btn btn-danger ml-auto mr-1 mb-1">
                                <i class="fa fa-trash"></i>
                            </a>
                        }
                        else if (Model.UserPermissions.GetInWorkRequest && Model.RequestModel.StatusId == (int)RequestStatus.InWork)
                        {
                            <a href="@Url.Action("DoneWork","EquipmentRepairRequest",new { Area = "IT", id=Model.RequestModel.Id })" class="btn btn-success flex-grow-1 mr-1 mb-1">Выполнена</a>
                        }
                        else if (Model.RequestModel.StatusId == (int)RequestStatus.Done && Model.CurrentUser.Id == Model.RequestModel.ClientId)
                        {
                            <a href="@Url.Action("Close","EquipmentRepairRequest",new { Area = "IT", id = Model.RequestModel.Id })" class="btn btn-primary mr-1 mb-1">Закрыть заявку</a>
                        }
                        else if (Model.RequestModel.StatusId == (int)RequestStatus.Closed && Model.RequestModel.ExecutorId == Model.CurrentUser.Id)
                        {
                            <a href="@Url.Action("Archive","EquipmentRepairRequest",new { Area = "IT", id=Model.RequestModel.Id })" class="btn btn-success flex-grow-1 mr-1 mb-1">В архив</a>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="col-6">

            <div class="row">
                <div class="col-12">
                    <div class="card bg-white">
                        <div class="card-body d-flex my-1 py-1">
                            <div class="flex-grow-1">
                                <h6 class="card-title text-dark my-2">Расход материала</h6>
                                <h6 class="card-subtitle text-muted ml-auto"></h6>
                            </div>
                            <div>
                                <button class="btn btn-link" type="button" data-toggle="modal" data-target="#consumptionModal">
                                    <i class="fa fa-plus-circle text-primary"></i>
                                </button>
                            </div>
                        </div>
                        <div class="card-body">
                            @if (Model.ConsumptionsListModel.Count == 0)
                            {
                                <div class="row">
                                    <p class="ml-3">Нет информации о затраченном материале</p>
                                </div>
                            }
                            else
                            {
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <td>Инв. №</td>
                                            <td>Наименование</td>
                                            <td>Количество</td>
                                            @if (Model.RequestModel.StatusId == (int)RequestStatus.InWork)
                                            {
                                                <td></td>
                                            }
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.ConsumptionsListModel)
                                        {
                                            <tr>
                                                <td>@item.ConsumableModel.InventoryNumber</td>
                                                <td>@item.ConsumableModel.Name</td>
                                                <td>@item.Count @item.ConsumableModel.UnitModel.Shortname</td>

                                                @if (Model.RequestModel.StatusId == (int)RequestStatus.InWork)
                                                {
                                                    <td>
                                                        <a href="@Url.Action("RemoveConsumption","EquipmentRepairRequest",new { id = item.Id })">
                                                            <i class="fa fa-trash text-danger"></i>
                                                        </a>
                                                    </td>
                                                }
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Consumption Modal -->
            <div class="modal fade" id="consumptionModal" tabindex="-1" role="dialog" aria-labelledby="consumptionModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="consumptionModalCenterTitle">Укажите расход материала</h5>
                        </div>
                        @using (Html.BeginForm("AddConsumption", "EquipmentRepairRequest", FormMethod.Post))
                        {
                            @Html.HiddenFor(model => model.RequestModel.Id)
                            <div class="modal-body">
                                <div class="row m-3">
                                    @Html.LabelFor(model => model.SelectedConsumableType, htmlAttributes: new { @class = "control-label text-dark" })
                                    @Html.DropDownListFor(model => model.SelectedConsumableType, Model.ConsumableTypes, "Выберите тип расходного материала", new { @class = "form-control" })
                                </div>
                                <div class="row m-3">
                                    @Html.LabelFor(model => model.SelectedConsumable, htmlAttributes: new { @class = "control-label text-dark" })
                                    @Html.DropDownListFor(model => model.SelectedConsumable, Model.Consumables, "Выберите расходный материал", new { @class = "form-control" })
                                </div>
                                <div class="row m-3">
                                    @Html.LabelFor(model => model.ConsumptionModel.Count, htmlAttributes: new { @class = "control-label text-dark" })
                                    @Html.EditorFor(model => model.ConsumptionModel.Count, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите количество материала", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.ConsumptionModel.Count, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-warning" data-dismiss="modal">Закрыть</button>
                                <button type="submit" class="btn btn-primary">Добавить</button>
                            </div>
                        }
                    </div>
                </div>
            </div>


            <div class="row my-3">
                <div class="col-12">
                    <div class="card mb-3 bg-white">
                        <div class="card-body d-flex">
                            <div class="flex-grow-1">
                                <h6 class="card-title text-dark my-2">Жизненный цикл заявки</h6>
                            </div>
                            <div>
                                <button class="btn btn-link" type="button" data-toggle="modal" data-target="#addMessageModal">
                                    <i class="fa fa-envelope text-primary"></i>
                                </button>
                            </div>
                        </div>
                        <div class="list-group p-1">
                            @foreach (var lifeCycle in Model.LifeCyclesListModel)
                            {
                                <a class="list-group-item list-group-item-action flex-column align-items-start bg-white text-dark">
                                    <div class="d-flex w-100 justify-content-between">
                                        <h5 class="mb-1">@lifeCycle.Message</h5>
                                        <small>@lifeCycle.Date.ToString()</small>
                                    </div>
                                    <i class="fa fa-user"></i>
                                    <small>@lifeCycle.Employee.Fullname</small>
                                </a>
                            }
                        </div>
                    </div>

                </div>

            </div>

            <!-- Add Message Modal -->
            <div class="modal fade" id="addMessageModal" tabindex="-1" role="dialog" aria-labelledby="addMessageModalModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addMessageModalModalCenterTitle">Введите сообщение</h5>
                        </div>
                        @using (Html.BeginForm("AddMessage", "EquipmentRepairRequest", new { id = Model.RequestModel.Id }, FormMethod.Post))
                        {
                            @Html.HiddenFor(model => model.RequestModel.Id)
                            <div class="modal-body">
                                <div class="row m-3">
                                    @Html.EditorFor(model => model.Message, new { htmlAttributes = new { @class = "form-control", @placeholder = "Введите текст сообщения", @autocomplete = "off" } })
                                    @Html.ValidationMessageFor(model => model.Message, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="modal-footer">
                                <button type="button" class="btn btn-warning" data-dismiss="modal">Закрыть</button>
                                <button type="submit" class="btn btn-primary">Добавить</button>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
