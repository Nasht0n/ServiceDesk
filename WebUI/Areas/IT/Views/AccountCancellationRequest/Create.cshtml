@model WebUI.ViewModels.Requests.IT.Accounts.AccountCancellationRequestViewModel
@section Scripts{
    <script>
            $(".custom-file-input").on("change", function () {
                var files = [];
                for (var i = 0; i < $(this)[0].files.length; i++) {
                    files.push($(this)[0].files[i].name);
                }
                $(this).next('.custom-file-label').html(files.join(', '));
            });
    </script>
}
@{
    ViewBag.Title = "Заявка на аннулирование учетной записи";
    Layout = "~/Views/Shared/Cerulean/_DashboardLayout.cshtml";
}

<h2 class="display-4 text-center text-dark mt-3 mb-3">@ViewBag.Title</h2>
<ol class="breadcrumb">
    <li class="breadcrumb-item">
        <a href="@Url.Action("ChooseCategory","Dashboard",new { Area = "", id = Model.ServiceModel.BranchModel.Id })">@Model.ServiceModel.BranchModel.Fullname</a>
    </li>
    <li class="breadcrumb-item">
        <a href="@Url.Action("ChooseService","Dashboard", new { Area = "", id = Model.ServiceModel.CategoryModel.Id })">@Model.ServiceModel.CategoryModel.Name</a>
    </li>
    <li class="breadcrumb-item">
        <span class="text-primary">@Model.ServiceModel.Name</span>
    </li>
    <li class="breadcrumb-item active">Регистрация заявки</li>
</ol>

<div class="container-fluid footer">

    @using (Html.BeginForm("Create", "AccountCancellationRequest", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="form-group col-12">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-12 text-dark" })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", Name = "Model.Title", placeholder = "Введите заголовок заявки (Пример: Аннулирование учетной записи студентов группы ТО)", autocomplete = "off" } })

                </div>
            </div>

            <div class="row">
                <div class="form-group col-12">
                    @Html.LabelFor(model => model.Justification, htmlAttributes: new { @class = "control-label col-md-12 text-dark" })
                    @Html.EditorFor(model => model.Justification, new { htmlAttributes = new { @class = "form-control", Name = "Model.Justification", placeholder = "Опишите необходимость заявки", @rows = 4 } })
                    @Html.ValidationMessageFor(model => model.Justification, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="row">
                <div class="form-group col-12">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-12 text-dark" })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", Name = "Model.Description", placeholder = "Введите дополнительную информацию о заявке", @rows = 4 } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })

                </div>
            </div>

            <div class="row">
                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.PriorityModel, htmlAttributes: new { @class = "control-label col-md-12 text-dark" })
                    @Html.DropDownListFor(model => model.PriorityId, Model.Priorities, htmlAttributes: new { @class = "form-control", Name = "Model.PriorityId" })
                </div>


                <div class="col-md-8">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FilePath, htmlAttributes: new { @class = "control-label" })
                        <div class="custom-file">
                            <input type="file" class="custom-file-input" id="inputFile" name="Model.Files" lang="ru" required multiple accept=".xls, .xlsx, .doc, .docx, .txt">
                            <label class="custom-file-label" for="inputFile">Выберите файл</label>
                        </div>
                        <div class="row" id="fileList">
                        </div>
                    </div>
                </div>
            </div>

            <div class="fileList">

            </div>

            <div class="row">
                <div class="form-group">
                    <div class="col-auto">
                        <input type="submit" value="Сохранить" class="btn btn-primary" />
                    </div>
                </div>
                <div class="text-dark">
                    @Html.ActionLink("Вернуться к созданию заявки", "ChooseBranch", "Dashboard", new { Area = "" }, new { @class = "btn btn-outline-primary" })
                </div>
            </div>
        </div>
    }
</div>
