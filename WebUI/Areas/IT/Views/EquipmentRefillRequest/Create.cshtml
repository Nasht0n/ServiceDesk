@model WebUI.ViewModels.Requests.IT.Equipments.EquipmentRefillRequestViewModel
@section Scripts{
    <script src="~/Scripts/servicedesk/equipments/refill-equipments-table.js" type="text/javascript"></script>
}
@{
    ViewBag.Title = "Заявка на заправку оборудования";
    Layout = "~/Views/Shared/Cerulean/_DashboardLayout.cshtml";
}


<div class="container footer">
    <h2 class="display-4 text-center text-dark mt-3 mb-3">@ViewBag.Title</h2>
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="@Url.Action("ChooseCategory","Dashboard",new { Area = "", id=Model.ServiceModel.BranchModel.Id })">@Model.ServiceModel.BranchModel.Fullname</a>
        </li>
        <li class="breadcrumb-item">
            <a href="@Url.Action("ChooseCategory","Dashboard", new { Area = "", id = Model.ServiceModel.CategoryModel.Id })">@Model.ServiceModel.CategoryModel.Name</a>
        </li>
        <li class="breadcrumb-item">
            <span class="text-primary">@Model.ServiceModel.Name</span>
        </li>
        <li class="breadcrumb-item active">Регистрация заявки</li>
    </ol>

    @if (ViewBag.RefillsCount > ViewBag.LimitsCount)
    {
        Model.Justification = "Прошу произвести заправку оборудования сверх установленного лимита";
        <div class="alert alert-dismissible alert-warning">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            <strong>Внимание! Информация о лимитах.</strong> Заправка: @ViewBag.RefillsCount. Количество заправок согласно лимита для подразделения: @ViewBag.LimitsCount. <strong>Заправка сверх лимита!</strong>
        </div>
    }
    else
    {
        Model.Justification = "Прошу произвести заправку оборудования согласно установленным лимитам";
        <div class="alert alert-dismissible alert-primary">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            <strong>Внимание! Информация о лимитах.</strong> Заправка: @ViewBag.RefillsCount. Количество заправок согласно лимита: @ViewBag.LimitsCount.
        </div>
    }
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <div class="container-fluid">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })
            <div class="row">
                <div class="form-group col-12">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-12 text-dark" })
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", Name = "Model.Title", placeholder = "Введите заголовок заявки (Пример: Заправка принтера)", autocomplete = "off" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-12">
                    @Html.LabelFor(model => model.Justification, htmlAttributes: new { @class = "control-label col-md-12 text-dark" })
                    @Html.EditorFor(model => model.Justification, new { htmlAttributes = new { @class = "form-control", Name = "Model.Justification", placeholder = "Опишите необходимость заявки", @rows = 4 } })
                    @Html.ValidationMessageFor(model => model.Justification, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-12">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-12 text-dark" })
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", Name = "Model.Description", placeholder = "Введите дополнительную информацию о заявке", @rows = 4 } })


                </div>
            </div>

            <div class="row">
                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.PriorityModel, htmlAttributes: new { @class = "control-label col-md-12 text-dark" })
                    @Html.DropDownListFor(model => model.PriorityId, Model.Priorities, htmlAttributes: new { @class = "form-control", Name = "Model.PriorityId" })
                </div>
                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.CampusModel, htmlAttributes: new { @class = "control-label col-md-12 text-dark" })
                    @Html.DropDownListFor(model => model.CampusId, Model.Campuses, htmlAttributes: new { @class = "form-control", Name = "Model.CampusId" })

                </div>
                <div class="col-md-4 form-group">
                    @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-12 text-dark" })
                    @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control", Name = "Model.Location", placeholder = "Введите номер аудитории/кабинета", autocomplete = "off" } })
                </div>
            </div>

            <div class="row m-1">
                <h6 class="text-center">Список оборудования, требующего заправку</h6>
                <table id="tblRefillEquipments" class="table">
                    <thead class="table-primary">
                        <tr>
                            <th class="d-none"></th>
                            <th class="d-none"></th>
                            <th class="w-75">Инвентарный номер оборудования</th>
                            <th class="w-25"></th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.Refills)
                        {
                            <tr>
                                <td>@Html.TextBoxFor(modelItem => item.InventoryNumber, new { @class = "form-control tblItem bg-light border-0", @readonly = "readonly" })</td>
                                <td>
                                    <button type="button" value="Удалить" class="btn btn-danger">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <td class="w-75">@Html.TextBox("InventoryNumber", "", new { @class = "form-control", id = "InventoryNumber" })</td>
                            <td class="w-25">
                                <input type="button" id="btnAddRefillEquipments" value="Добавить" class="btn btn-success w-100" />
                            </td>
                        </tr>
                    </tfoot>

                </table>

            </div>

            <div class="row">
                <div class="form-group">
                    <div class="col-auto">
                        <input type="submit" value="Создать заявку" class="btn btn-primary" />
                    </div>
                </div>
                <div class="text-dark">
                    @Html.ActionLink("Вернуться к созданию заявки", "ChooseBranch", "Dashboard", new { Area = "" }, new { @class = "btn btn-outline-primary" })
                </div>
            </div>
        </div>
    }
</div>
